<Window x:Class="ElectricalPowerSystems.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ElectricalPowerSystems"
        mc:Ignorable="d"
        Name="windowElement"
        Title="Power System Simulator v. 1.0 - 0.(9)" Height="360" Width="531.916" MinWidth="600" MinHeight="600">
    <Grid>
        <Grid.Resources>
            <Style x:Key="itemStyle" TargetType="TabItem">
                <Setter Property="Width" Value="Auto" />
                <Setter Property="Padding" Value="5,0,5,0" />
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            </Style>
            <DataTemplate x:Key="itemHeader">
                <Grid Name="Panel" Width="Auto" HorizontalAlignment="Left">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0" HorizontalAlignment="Left" Text="{Binding Path=Header, Mode=OneWay}"/>
                    <Button Grid.Column="1" DockPanel.Dock="Right"  Margin="5,0,0,0" 
                        Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.DeleteCommand}"
                        CommandParameter="{Binding}" BorderThickness="0" BorderBrush="{x:Null}"
                        HorizontalAlignment="Right">
                        <Image Source="Resources/Icons/016-cross.png" Width="10" Height="10"/>
                    </Button>
                </Grid>
                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding
                    RelativeSource={RelativeSource
                        Mode=FindAncestor,
                        AncestorType={x:Type TabItem}},
                        Path=IsSelected}" Value="True">
                        <Setter TargetName="Panel" Property="Background" Value="LightSkyBlue" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding
                    RelativeSource={RelativeSource
                        Mode=FindAncestor,
                        AncestorType={x:Type TabItem}},
                        Path=IsSelected}" Value="False">
                        <Setter TargetName="Panel" Property="Background" Value="GhostWhite" />
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>
            <DataTemplate x:Key="itemContent">
                <TextBox Text="{Binding Content}"
                         HorizontalScrollBarVisibility="Auto"
                         VerticalScrollBarVisibility="Auto"
                         ScrollViewer.CanContentScroll="True" TextChanged="TextBox_TextChanged"/>
            </DataTemplate>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Menu Grid.Row="0" Height="25" VerticalAlignment="Top">
            <MenuItem Header="{DynamicResource m_menu_File}">
                <MenuItem x:Name="newProjectMenu" Header="{DynamicResource m_menu_New_Project}" />
                <MenuItem x:Name="openProjectMenu" Header="{DynamicResource m_menu_Open_Project}" />
                <MenuItem Header="{DynamicResource m_menu_Open_Recent}" >
                    <MenuItem x:Name="openRecentMenu" Header="{DynamicResource m_menu_Clear_List}" IsEnabled="False">
                    </MenuItem>
                    <Separator />
                </MenuItem>
                <Separator />
                <MenuItem x:Name="exitMenu" Header="{DynamicResource m_menu_Exit}" ></MenuItem>
            </MenuItem>
            <MenuItem Header="{DynamicResource m_menu_Edit}" >
                <MenuItem Header="{DynamicResource m_menu_Undo}" Command="Undo" IsEnabled="False"></MenuItem>
                <MenuItem Header="{DynamicResource m_menu_Redo}" Command="Redo" IsEnabled="False"></MenuItem>
                <MenuItem Header="{DynamicResource m_menu_Copy}" Command="Copy" ></MenuItem>
                <MenuItem Header="{DynamicResource m_menu_Cut}" Command="Cut" ></MenuItem>
                <MenuItem Header="{DynamicResource m_menu_Paste}" Command="Paste" ></MenuItem>
            </MenuItem>
            <MenuItem x:Name="RunMenuButton" Header="{DynamicResource m_menu_Run}" Click="RunMenuButton_Click" ></MenuItem>
            <!--<MenuItem x:Name="RunPowerTestButton" Header="{DynamicResource m_menu_Run_Test}" Click="RunPowerTestButton_Click"></MenuItem>-->
            <MenuItem Header="{DynamicResource m_menu_Help}" ></MenuItem>
        </Menu>
        <ToolBar Grid.Row="1" Height="36" VerticalAlignment="Top" Width="Auto">
            <Button x:Name="CreateFileButton" >
                <Image Source="Resources/Icons/002-file.png"/>
            </Button>
            <Button x:Name="OpenFileButton">
                <Image Source="Resources/Icons/003-open-folder.png"/>
            </Button>
            <Button x:Name="SaveFileButton">
                <Image Source="Resources/Icons/005-save.png"/>
            </Button>
            <Button x:Name="SaveAllButton">
                <Image Source="Resources/Icons/floppy-disk.png"/>
            </Button>
            <Separator />
            <Button x:Name="UndoButton" Command="Undo" IsEnabled="False">
                <Image Source="Resources/Icons/010-undo.png" />
            </Button>
            <Button x:Name="RedoButton" Command="Redo" IsEnabled="False">
                <Image Source="Resources/Icons/015-redo.png" />
            </Button>
            <Separator />
            <Button x:Name="Cut" Command="Cut">
                <Image Source="Resources/Icons/007-scissors.png" />
            </Button>
            <Button x:Name="Copy" Command="Copy">
                <Image Source="Resources/Icons/008-copy.png" />
            </Button>
            <Button x:Name="Paste" Command="Paste">
                <Image Source="Resources/Icons/009-paste.png" />
            </Button>
            <Separator />
            <Button x:Name="Start">
                <Image Source="Resources/Icons/play-button.png" />
            </Button>
            <Separator />
            <Button x:Name="Help" IsEnabled="False">
                <Image Source="Resources/Icons/017-information.png" />
            </Button>
            <Separator />
        </ToolBar>
        <TabControl Grid.Row="2" Name="FileTab"
                    ItemsSource="{Binding Path = TabItems}"
                    ItemContainerStyle="{StaticResource itemStyle}"
                    ItemTemplate="{StaticResource itemHeader}"
                    ContentTemplate="{StaticResource itemContent}"
                    SelectionChanged="FileTab_SelectionChanged"
                    Template="{DynamicResource TabControlTemplate}"
                    >
            <TabControl.Resources>
                <Style x:Key="TabScrollRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
                    <Setter Property="Padding" Value="5,0,5,0"/>
                    <Setter Property="Margin" Value="5,0,5,0"/>
                </Style>
                <ControlTemplate x:Key="TabControlTemplate" TargetType="{x:Type TabControl}">
                    <Grid x:Name="Grid">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="0"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Border Grid.Row="1">
                            <ContentPresenter ContentSource="SelectedContent" Grid.Column="0" x:Name="TabContent" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                                              />
                        </Border>
                        <ScrollViewer x:Name="HeaderPanel" HorizontalScrollBarVisibility="Hidden"
                                      VerticalScrollBarVisibility="Disabled"
                                      Grid.Row="0" Grid.Column="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0,0,0,0">
                            <ScrollViewer.Style>
                                <Style TargetType="{x:Type ScrollViewer}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="*"/>
                                                        <ColumnDefinition Width="Auto"/>
                                                        <ColumnDefinition Width="Auto"/>
                                                        <ColumnDefinition Width="Auto"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="20px"/>
                                                    </Grid.RowDefinitions>
                                                    <ScrollContentPresenter Grid.Column="0" Content="{TemplateBinding ScrollViewer.Content}"/>

                                                    <RepeatButton Grid.Column="1" Command="ScrollBar.LineLeftCommand"
                                                                  Style="{DynamicResource TabScrollRepeatButtonStyle}" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="{x:Null}" BorderThickness="0" Margin="0">
                                                        <Image Source="Resources/Icons/011-left-chevron.png"></Image>
                                                    </RepeatButton>
                                                    <RepeatButton Grid.Column="2" Command="ScrollBar.LineRightCommand"
                                                                  Style="{DynamicResource TabScrollRepeatButtonStyle}" Margin="0" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="{x:Null}">
                                                        <Image Source="Resources/Icons/012-right-chevron.png"></Image>
                                                    </RepeatButton>
                                                    <RepeatButton Grid.Column="3" HorizontalAlignment="Stretch"  VerticalAlignment="Stretch"
                                                                  Style="{DynamicResource TabScrollRepeatButtonStyle}" Foreground="{x:Null}" BorderBrush="{x:Null}" Background="{x:Null}" Margin="0">
                                                        <Image Source="Resources/Icons/013-down-chevron.png"></Image>
                                                    </RepeatButton>
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ScrollViewer.Style>
                            <StackPanel Orientation="Horizontal">
                                <StackPanel IsItemsHost="True" Orientation="Horizontal" Background="{x:Null}" KeyboardNavigation.TabIndex="1"/>
                                <Button 
                                    Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.NewCommand}"
                                    CommandParameter="{Binding}"
                                    HorizontalAlignment="Left"
                                    Background="{x:Null}"
                                    BorderBrush="{x:Null}" Foreground="{x:Null}" BorderThickness="0" Margin="0"
                                    Padding="5,0,5,0">
                                    <Image Source="Resources/Icons/006-add.png"></Image>
                                </Button>
                            </StackPanel>
                        </ScrollViewer>
                    </Grid>
                </ControlTemplate>
                <Style TargetType="TextBox">
                    <Setter Property="AcceptsReturn" Value="True"></Setter>
                    <Setter Property="Height" Value="Auto"></Setter>
                    <Setter Property="Width" Value="Auto"></Setter>
                    <Setter Property="Margin" Value="0"></Setter>
                    <Setter Property="FontFamily" Value="0"></Setter>
                </Style>
            </TabControl.Resources>
        </TabControl>

        <Expander Grid.Row="3" IsExpanded="True" >
            <Expander.Content>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="5"/>
                    </Grid.RowDefinitions>
                    <TabControl Height="150">
                    <TabItem Header="{DynamicResource m_Output_Header}" >
                        <TextBox Text="{Binding Path=OutputText, Mode=OneWay}"  Height="Auto" Width="Auto" Margin="10" x:Name="OutputTextBox" VerticalScrollBarVisibility="Auto" IsReadOnly="True">
                    </TextBox>
                </TabItem>
                    <TabItem Header="{DynamicResource m_Errors_Header}">
                    <ListView x:Name="ErrorList" Margin="10" ItemsSource="{Binding Path=Errors}">
                        <ListView.View>
                            <GridView>
                                <GridView.ColumnHeaderContainerStyle>
                                    <Style TargetType="{x:Type GridViewColumnHeader}">
                                        <Setter Property="Visibility"
    							            Value="Visible"/>
                                    </Style>
                                </GridView.ColumnHeaderContainerStyle>
                                    <GridViewColumn Header="{DynamicResource m_Errors_Line_Header}" Width="Auto">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Margin="0"
    								        VerticalAlignment="Center"
    								        Text="{Binding Path=Line,Mode=OneWay}"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="{DynamicResource m_Errors_Position_Header}" Width="Auto">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Margin="0"
    								        VerticalAlignment="Center"
    								        Text="{Binding Path=Position,Mode=OneWay}"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                    <GridViewColumn Header="{DynamicResource m_Errors_Message_Header}" Width="Auto">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Margin="0"
    								        Text="{Binding Path=Message,Mode=OneWay}"/>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                            </GridView>
                        </ListView.View>
                    </ListView>
                </TabItem>
            </TabControl>
                    <GridSplitter Grid.Row="1" Height="5" ResizeDirection="Rows" ResizeBehavior="PreviousAndCurrent" HorizontalAlignment="Stretch"/>
                </Grid>
            </Expander.Content>
        </Expander>
        <StatusBar Grid.Row="4" Height="25" Width="Auto">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>
            <StatusBarItem Grid.Column="2" VerticalContentAlignment="Center" BorderThickness="0">
                <TextBlock Text="{DynamicResource m_Memory_Usage_Header}"/>
            </StatusBarItem>
            <StatusBarItem Grid.Column="3" VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch"  Padding="10,4">
                <TextBlock x:Name="MemoryUsage"></TextBlock>
            </StatusBarItem>
            <StatusBarItem Grid.Column="0">
                <TextBlock x:Name="StatusBlock" Text="{Binding StatusText}"></TextBlock>
            </StatusBarItem>
        </StatusBar>
    </Grid>
</Window>
