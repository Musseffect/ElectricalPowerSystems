
/*
native struct recloserState
{
	float ua;
	float ub;
	float uc;
	float ia;
	float ib;
	float ic;
	float time;
	bool currentState;
};
*/

struct memoryState
{
	int i;
};

memoryState internalState = new memoryState{0};
float[5] floatArray = new float[]{0,1,2,3,4};

void init()
{
	internalState.i = 0;
	float counter = 0;
	for(int i=0;i<length(floatArray);i++)
	{
		counter += floatArray[i];
	}
}
bool calc(inout recloserState state)
{
	if(state.currentState)
	{
		state.currentState = false;
		return true;
	}
	return false
}
bool update(in recloserState state)
{
	bool condition = true;
	while(condition)
	{
		condition = calc(state);
	}
	debugPrint(condition);
	return true;
}
/*
stack  - array of bytes
program bytecode - array of commands
commandpointer
stackpointer
registers
start with main function
*/